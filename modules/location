'use strict';

// Returns latitude and longitude based on user input
// User input can be either:
// 1. Address
// 2. Zip
// 3. Landmark

// *** REQUIRES
const axios = require('axios');
let cache = require('./cache');

// ******** Global Variables
let lat;
let lon;
let locationData = [];

async function getLocation(request, response, next) {
  // http://localhost:3001/location?city=Seattle
  try {
    let q = request.query.q;

    let key = `${q}Location`;

    if (cache[key] && ((Date.now() - cache[key].timeStamp) < 14400000)) {
      console.log('using cache data');
      locationData = cache[key].data;
    } else {
      console.log('using API data');
      let endpoint = 'https://us1.locationiq.com/v1/search?&format=json&limit=1';
      let url = `${endpoint}&key=${process.env.LOCATIONIQ_API_KEY}&q=${q}`;

      let dataToGroom = await axios.get(url);
      dataToGroom = dataToGroom.data[0];

      locationData = {
        lat: dataToGroom.lat,
        lon: dataToGroom.lon,
      }

      // Cache results from API call
      cache[key] = {
        data: locationData,
        timeStamp: Date.now(),
      };

      console.log(cache);
    }

    response.status(200).send(locationData);

  } catch (error) {
    console.log(error.message);
    next(error);
  }
}

module.exports = getLocation;
